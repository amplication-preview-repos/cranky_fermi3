/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Contratti as PrismaContratti } from "@prisma/client";

export class ContrattiServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ContrattiCountArgs, "select">
  ): Promise<number> {
    return this.prisma.contratti.count(args);
  }

  async contrattis<T extends Prisma.ContrattiFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ContrattiFindManyArgs>
  ): Promise<PrismaContratti[]> {
    return this.prisma.contratti.findMany<Prisma.ContrattiFindManyArgs>(args);
  }
  async contratti<T extends Prisma.ContrattiFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ContrattiFindUniqueArgs>
  ): Promise<PrismaContratti | null> {
    return this.prisma.contratti.findUnique(args);
  }
  async createContratti<T extends Prisma.ContrattiCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ContrattiCreateArgs>
  ): Promise<PrismaContratti> {
    return this.prisma.contratti.create<T>(args);
  }
  async updateContratti<T extends Prisma.ContrattiUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ContrattiUpdateArgs>
  ): Promise<PrismaContratti> {
    return this.prisma.contratti.update<T>(args);
  }
  async deleteContratti<T extends Prisma.ContrattiDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ContrattiDeleteArgs>
  ): Promise<PrismaContratti> {
    return this.prisma.contratti.delete(args);
  }
}
