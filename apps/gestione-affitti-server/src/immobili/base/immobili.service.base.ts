/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Immobili as PrismaImmobili } from "@prisma/client";

export class ImmobiliServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ImmobiliCountArgs, "select">): Promise<number> {
    return this.prisma.immobili.count(args);
  }

  async immobilis<T extends Prisma.ImmobiliFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ImmobiliFindManyArgs>
  ): Promise<PrismaImmobili[]> {
    return this.prisma.immobili.findMany<Prisma.ImmobiliFindManyArgs>(args);
  }
  async immobili<T extends Prisma.ImmobiliFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ImmobiliFindUniqueArgs>
  ): Promise<PrismaImmobili | null> {
    return this.prisma.immobili.findUnique(args);
  }
  async createImmobili<T extends Prisma.ImmobiliCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ImmobiliCreateArgs>
  ): Promise<PrismaImmobili> {
    return this.prisma.immobili.create<T>(args);
  }
  async updateImmobili<T extends Prisma.ImmobiliUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ImmobiliUpdateArgs>
  ): Promise<PrismaImmobili> {
    return this.prisma.immobili.update<T>(args);
  }
  async deleteImmobili<T extends Prisma.ImmobiliDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ImmobiliDeleteArgs>
  ): Promise<PrismaImmobili> {
    return this.prisma.immobili.delete(args);
  }
}
