/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Utenti as PrismaUtenti } from "@prisma/client";

export class UtentiServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.UtentiCountArgs, "select">): Promise<number> {
    return this.prisma.utenti.count(args);
  }

  async utentis<T extends Prisma.UtentiFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.UtentiFindManyArgs>
  ): Promise<PrismaUtenti[]> {
    return this.prisma.utenti.findMany<Prisma.UtentiFindManyArgs>(args);
  }
  async utenti<T extends Prisma.UtentiFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.UtentiFindUniqueArgs>
  ): Promise<PrismaUtenti | null> {
    return this.prisma.utenti.findUnique(args);
  }
  async createUtenti<T extends Prisma.UtentiCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UtentiCreateArgs>
  ): Promise<PrismaUtenti> {
    return this.prisma.utenti.create<T>(args);
  }
  async updateUtenti<T extends Prisma.UtentiUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UtentiUpdateArgs>
  ): Promise<PrismaUtenti> {
    return this.prisma.utenti.update<T>(args);
  }
  async deleteUtenti<T extends Prisma.UtentiDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.UtentiDeleteArgs>
  ): Promise<PrismaUtenti> {
    return this.prisma.utenti.delete(args);
  }
}
